{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.de13e8a46adcf3a3deff.hot-update.js","sources":["webpack:///./components/contents/PostList/InsPost.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadPost } from \"../../../redux/actions/PostCommentAction\";\r\nimport ListPost from \"./ListPost\";\r\n\r\nclass InsPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n      btnLock: true\r\n    };\r\n  }\r\n  onHandleTextarea = evt => {\r\n    const value = evt.target.value;\r\n\r\n    this.setState({\r\n      data: value,\r\n      btnLock: value.length > 0 ? false : true\r\n    });\r\n  };\r\n  onTweet = async () => {\r\n    const { data } = this.state;\r\n\r\n    try {\r\n      const API_URL = \"http://localhost:4002\";\r\n\r\n      const raw = await fetch(`${API_URL}/Post/PostData`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        },\r\n        body: `data_field=${data}`\r\n      });\r\n\r\n      let res = await raw.json();\r\n      const { LoadPost } = this.props;\r\n      LoadPost();\r\n      this.setState({ data: \"\" });\r\n      // dispatch({\r\n      //   type:'LoadPost',\r\n      //   payload: res\r\n      // })\r\n\r\n      // console.log('res',res)\r\n      //   if (res.status) {\r\n      //     dispatch({\r\n      //       type: actionType.PRODUCT_LOAD_ALL,\r\n      //       payload: res.products\r\n      //     });\r\n      //   } else {\r\n      //     console.log(\"1error\", res.message);\r\n      //   }\r\n    } catch (error) {\r\n      console.log(\"2error :\", error);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const { LoadPost } = this.props;\r\n    LoadPost();\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"componentWillUnmount\");\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.allState)\r\n    const { PostDataAll } = this.props;\r\n    // console.log(\"send success\",PostDataAll);\r\n    // console.log(PostDataAll.length);\r\n    let datalist = <h2>ไม่มีข้อมูล</h2>;\r\n\r\n    if (PostDataAll && PostDataAll.length > 0) {\r\n      datalist = <ListPost massage={PostDataAll} />;\r\n    }\r\n    return (\r\n      <div\r\n        style={{ border: \"1px solid red\" }}\r\n        className=\"d-flex justify-content-center\"\r\n      >\r\n        <div\r\n          style={{ border: \"1px solid red\", width: \"290px\" }}\r\n          className=\"mr-2\"\r\n        >\r\n          <Card>\r\n            <CardImg\r\n              top\r\n              width=\"100%\"\r\n              src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\r\n              alt=\"Card image cap\"\r\n            />\r\n            <CardBody>\r\n              <CardTitle>Card title</CardTitle>\r\n              <CardSubtitle>Card subtitle</CardSubtitle>\r\n              <CardText>\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div style={{ border: \"1px solid red\", width: \"590px\" }}>\r\n          <div>\r\n            <Card style={{ background: \"#71c9f8\" }}>\r\n              <CardBody>\r\n                <CardSubtitle>\r\n                  <textarea\r\n                    placeholder=\"What happening?\"\r\n                    style={{ width: \"100%\", height: \"100px\" }}\r\n                    value={this.state.data}\r\n                    onChange={e => this.onHandleTextarea(e)}\r\n                  />\r\n                </CardSubtitle>\r\n                <div style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    type=\"button\"\r\n                    disabled={this.state.btnLock}\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.onTweet()}\r\n                    style={{ marginTop: \"2px\" }}\r\n                  >\r\n                    Tweet\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n            {datalist}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    PostDataAll: state.PostCommentReducer.postAll\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { LoadPost }\r\n)(InsPost);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAOA;AACA;AACA;AADA;AAGA;AALA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAcA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;AACA;AADA;AAAA;AAAA;AAiCA;AACA;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AA4CA;AACA;AADA;AAGA;AACA;;;AAEA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;AAlIA;AACA;AAoIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AAAA;;;;A","sourceRoot":""}